services:

  nginx:
    image: nginx
    container_name: nginx-container
    depends_on:
      - mysql
      - jspark
      - pgadmin
      - postgres
    restart: always
    volumes:
      - ./nginx/index.html:/usr/share/nginx/index.html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - nginx_network
    ports:
      - ${NGINX_PORT}:80

  mysql:
    image: mysql
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    restart: always
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - nginx_network
    #ports:
    #  - ${MYSQL_PORT}:3306

  jspark:
    build:
      context: ./jspark
      dockerfile: dockerfile
    container_name: jspark-container
    environment:
      JSPARK_TOKEN: ${JSPARK_TOKEN}
      JUPYTER_ENABLE_LAB: yes
      JUPYTERHUB_SERVICE_PREFIX: /jupyterlab/
    restart: always
    volumes:
      - jspark-home:/home/jovyan/work
    networks:
      - nginx_network

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: pgadmin-container
    depends_on:    
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_DISABLE_POSTFIX: true
      SCRIPT_NAME: /pgadmin
    restart: always
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - nginx_network

  postgres:
    image: postgres:17-bookworm
    container_name: postgres-container
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: dvdrental
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data 
      - ./postgres/server-backups:/var/lib/postgresql/backups
    networks:
      - nginx_network
    #ports:
    #  - ${POSTGRES_PORT}:5432

#  debezium:
#      image: debezium/connect:2.7.3.Final
#      container_name: debezium-container
#      restart: on-failure
#      depends_on:    
#        - postgres
#      environment:
#        - BOOTSTRAP_SERVERS=${EH_NAME}.servicebus.windows.net:9093
#        - GROUP_ID=1
#        - CONFIG_STORAGE_TOPIC=debezium_configs
#        - OFFSET_STORAGE_TOPIC=debezium_offsets
#        - STATUS_STORAGE_TOPIC=debezium_statuses
#        - CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=false
#        - CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false
#        - CONNECT_OFFSET_STORAGE_PARTITIONS=1
#        - CONNECT_STATUS_STORAGE_PARTITIONS=1
#        - CONNECT_REQUEST_TIMEOUT_MS=60000
#        - CONNECT_SECURITY_PROTOCOL=SASL_SSL
#        - CONNECT_SASL_MECHANISM=PLAIN
#        - CONNECT_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="$$ConnectionString" password="${EH_CONNECTION_STRING}";
#        - CONNECT_PRODUCER_SECURITY_PROTOCOL=SASL_SSL
#        - CONNECT_PRODUCER_SASL_MECHANISM=PLAIN
#        - CONNECT_PRODUCER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="$$ConnectionString" password="${EH_CONNECTION_STRING}";
#        - CONNECT_CONSUMER_SECURITY_PROTOCOL=SASL_SSL
#        - CONNECT_CONSUMER_SASL_MECHANISM=PLAIN
#        - CONNECT_CONSUMER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="$$ConnectionString" password="${EH_CONNECTION_STRING}"
#      networks:
#        - kafka_connect

volumes:
  # jspark volumes
  jspark-home:
    external: true
  # pgadmin volumes
  pgadmin-data:
    external: true
  #postgres volumes
  postgres-data:
    external: true
  #mysql volumes
  mysql-data:
    external: true


networks:
  nginx_network:
    driver: bridge
